ext {
    dependencyVersions = [
        aws             : "1.10.40",
        groovy          : "2.4.5",
        ratpack         : "1.1.1",
    ]
}

buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:1.2.2"
    }
}

apply plugin: "idea"
apply plugin: "groovy"
apply plugin: "com.github.johnrengelman.shadow"

repositories {
    mavenCentral()
    maven { url "https://oss.jfrog.org/repo" }
}

dependencies {
    runtime "org.apache.logging.log4j:log4j-slf4j-impl:2.2"
    runtime "org.apache.logging.log4j:log4j-api:2.2"
    runtime "org.apache.logging.log4j:log4j-core:2.2"
    runtime "com.lmax:disruptor:3.3.0"

    compile "org.codehaus.groovy:groovy-all:${dependencyVersions.groovy}"
    compile "com.amazonaws:aws-java-sdk-s3:${dependencyVersions.aws}"
    compile "org.jodd:jodd-lagarto:3.6.7"
    compile "org.jodd:jodd-http:3.6.7"

    testCompile "org.spockframework:spock-core:1.0-groovy-2.4"
    testCompile "io.ratpack:ratpack-groovy-test:${dependencyVersions.ratpack}"
}

wrapper {
    gradleVersion = "2.9"
}

task publish(type: JavaExec) {

    def arguments = []

    if(project.hasProperty('baseUrl')) {
        arguments << baseUrl
    }

    if(project.hasProperty('additional')) {
        arguments.addAll Eval.me(additional)
    }

    args arguments

    ["S3_BUCKET", "S3_KEY", "S3_SECRET"].each { String var ->
        environment var, System.getenv().get(var)
    }

    classpath = sourceSets.main.runtimeClasspath
    main = "com.energizedwork.web.PublishWebsiteToS3"

}

jar {
    manifest {
        attributes("Main-Class": "com.energizedwork.web.PublishWebsiteToS3")
    }
}

